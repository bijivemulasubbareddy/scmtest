# version: "3"
# services:

#   app:
#     image: main
#     ports:
#       - 8000:8000
  
    
#   zookeeper:
#     image: docker.io/bitnami/zookeeper:3.8
#     restart: always
#     ports:
#       - 2181:2181
#     # volumes:
#     #   - zookeeper_data:/bitnami
#     environment:   
#       - ALLOW_ANONYMOUS_LOGIN=yes 

#   kafka:
#     image: docker.io/bitnami/kafka:3.2
#     restart: always
#     ports:
#       - 9092:9092
#     # volumes:
#     #   - kafka_data:/bitnami
#     environment:
#       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181  
#       - ALLOW_PLAINTEXT_LISTENER=yes  
#     depends_on:
#       - zookeeper
#     healthcheck: 
#       test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"]
#       interval: 10s
#       timeout: 30s
#       retries: 3
#       # start_period: 30s

#   server:
#     image: serveer:v5
#     # build: ./server/
#     ports:
#       - 12345:12345
    
#   producer:
#     image: producers1:latest
#     depends_on:
#       kafka:
#         condition: service_healthy 
      
    
#   consumer:
#     image: consumers1:latest
#     depends_on:
#       kafka:
#         condition: service_healthy 
      
   

# volumes:
#   zookeeper_data:   
#     driver: local
#   kafka_data:
#     driver: local







version: "3"
services:

  app:
    image: app:latest
    # build: .
    ports:
      - 8000:8000

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    # restart: always
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    # restart: always
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"]
      interval: 30s
      timeout: 50s
      retries: 3
      # start_period: 15s


  server:
    image: server:latest
    # build: ./socket
    ports:
      - 12345:12345

  producer:
    image: producer3:latest
    # build: ./producer
    depends_on:
      - kafka
        # condition: service_healthy


  consumer:
    image: consumer4:latest
    # build: ./consumer/ 
    depends_on:
      - kafka
        # condition: service_healthy
    
